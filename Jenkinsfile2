pipeline {
    agent any 
    environment {
    DOCKER_TAG = getVersion()
    }
    stages {
        stage('SCM') {
            steps {
                git 'https://github.com/gauravbhalekar5/web-application.git'
            }
        }
        stage('Build the Application through Maven') {
            steps {
                sh "mvn clean package"
            }
        }
        stage('Build the Docker Image') {
            steps {
                sh "docker build . -t srkgaurav123/appimage2:${DOCKER_TAG} "
            }
        }
        stage('Push Docker Image to DockerHUB') {
            steps {
                withCredentials([string(credentialsId: 'Docker-HUB', variable: 'docker_pwd')]) {
                sh "docker login -u srkgaurav123 -p ${docker_pwd}"
            }
                
                sh "docker push srkgaurav123/appimage2:${DOCKER_TAG}"
            }
        }
        stage('Deploy Docker Container on production') {
            steps {
                ansiblePlaybook credentialsId: 'deploy_on_production-server', disableHostKeyChecking: true, extras: "-e DOCKER_TAG=${DOCKER_TAG}", installation: 'ansible_home', inventory: 'production.inv', playbook: 'Deploy docker.yml'
            }
        }

    }

}
def getVersion(){
    def commitHash = sh returnStdout: true, script: 'git rev-parse --short HEAD'
    return commitHash
    //to pickup latest commit ID and store return value in variable 
}

